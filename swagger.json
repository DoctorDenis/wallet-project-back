{
    "openapi": "3.0.1",
    "info": {
        "version": "1.0",
        "title": "Wallet",
        "description": "API documentation for project",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
        
    },
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "servers": [
        {
            "url": "https://wallet-project.cyclic.app/"
        },
        {
            "url": "http://localhost:3000/"
        }
    ],
    "tags": [
        {
            "name": "User",
            "description": "Users endpoints"
        },
        {
            "name": "Transactions",
            "description": "Transactions endpoints"
        },
        {
            "name": "Categories",
            "description": "Categories endpoints"
        },
        {
            "name": "Statistics",
            "description": "Statistics endpoints"
        },
        {
            "name": "Exchange rate",
            "description": "Get exchange rate from Monobank API"
        }
    ],
    "paths": {
        "/users/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary":"User registration",
                "parameters": [],
                "requestBody": {
                    "description": "Registration's object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegistrationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegistrationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {}
                    },
                    "409": {
                        "description": "Email in use",
                        "content": {}
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User login",
                "parameters": [],                
                "requestBody": {
                    "description": "Login's object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    }
                }
            }
        },
        "/users/logout": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary":"User logout",
                "parameters":[],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {}
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {}
                    }
                }
            }
        },
        "/users/refresh": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Get new pairs of tokens",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "requestBody": {
                    "description": "Request body with session's id",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefreshTokensRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RefreshTokensResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {}
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    }
                }
            }
        },
        "/users/current": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user's information by access token",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Succsessful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrentUserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {}
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    }
                }
            }
        },
        "/transactions": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get transactions by user",
                "parameters":[],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAllTransactionsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    }
                }
            }
        },
        "/transactions/add": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Add a transaction",
                "parameters":[],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "requestBody": {
                    "description": "Request body with session's id",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddTransactionRequest"
                            }
                        }
                    }                        
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddTransactionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get categories",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetCategoriesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    }
                }
            }
        },
        "/statistics": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Get statistics by user",
                "parameters": [
                    {
                        "name": "month",
                        "in": "query",
                        "description": "Month of expenses",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "7",
                                "8",
                                "9",
                                "10",
                                "11",
                                "12"
                            ]
                        }
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Year of expenses",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succsessful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetStatisticsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    }
                }
            }
        },
        "/currency": {
            "get": {
                "tags": [
                    "Exchange rate"
                ],
                "summary": "Get exchange rate from Monobank API",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "RegistrationRequest": {
                "type": "object",
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "User's name",
                        "example": "Kostya"
                    },
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password",
                        "example": "Qwerty123"
                    }
                }
            },
            "RegistrationResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "success",
                        "example": "User successfully created"
                    },
                    "user": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "User's name",
                                "example": "Kostya"
                            },
                            "email": {
                                "type": "string",
                                "description": "User's email",
                                "format": "email"
                            },
                            "balance": {
                                "type": "integer",
                                "description": "User's balance",
                                "example": 100
                            },
                            "transactions": {
                                "type": [],
                                "description": "User's transaction",
                                "example": []
                            }
                        }
                    },
                    "accesToken": {
                        "type": "string",
                        "description": "token",
                        "example": "eyJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI2Mzk1ZjFlOWYyZDE1MjhiZmRhMGEwYWEifQ.O_klEGDVOCTRjBksr_9ZmHe2_h-YfDI8vWVACn808nU"
                    },
                    "refreshToken": {
                        "type": "string",
                        "description": "token",
                        "example": "eyJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI2Mzk1ZjFlOWYyZDE1MjhiZmRhMGEwYWEifQ.O_klEGDVOCTRjBksr_9ZmHe2_h-YfDI8vWVACn808nU"
                    }
                }
            },
            "LoginRequest": {
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password",
                        "example": "123456"
                    }
                }
            },
            "LoginResponse": {
                "type":"object",
                "properties": {
                    "user": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "User's name",
                                "example": "Kostya"
                            },
                            "email": {
                                "type": "string",
                                "description": "User's email",
                                "format": "email"
                            },
                            "balance": {
                                "type": "integer",
                                "description": "User's balance",
                                "example": 100
                            },
                            "transactions": {
                                "type": [],
                                "description": "User's transaction",
                                "example": []
                            }
                        }
                    },
                    "accesToken": {
                        "type": "string",
                        "description": "token",
                        "example": "eyJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI2Mzk1ZjFlOWYyZDE1MjhiZmRhMGEwYWEifQ.O_klEGDVOCTRjBksr_9ZmHe2_h-YfDI8vWVACn808nU"
                    },
                    "refreshToken": {
                        "type": "string",
                        "description": "token",
                        "example": "eyJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI2Mzk1ZjFlOWYyZDE1MjhiZmRhMGEwYWEifQ.O_klEGDVOCTRjBksr_9ZmHe2_h-YfDI8vWVACn808nU"
                    }
                }
            },
            "RefreshTokensRequest": {
                "type": "object",
                "properties": {}
            },
            "RefreshTokensResponse": {
                "type": "object",
                "properties": {}
            },
            "CurrentUserResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "success",
                        "example": "success"
                    },
                    "code": {
                        "type": "integer",
                        "description": "200 status code",
                        "example": "200"
                    },
                    "data": {
                        "type": "object",
                        "description": "User's data",
                        "properties": {
                            "user": {
                                "type": "object",
                                "properties": {
                                    "_id": {
                                        "type": "string",
                                        "description": "User ID",
                                        "example": "6395f1e9f2d1528bfda0a0aa"
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "User's name",
                                        "example": "Usertest"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "User's password",
                                        "example": "LKDl:NDCNAWhaoawid89ydpaw8y992"
                                    },
                                    "email": {
                                        "type": "string",
                                        "description": "User's email",
                                        "format": "email"
                                    },
                                    "balance": {
                                        "type": "number",
                                        "description": "User's balance",
                                        "example": "100"
                                    },
                                    "emailVerified": {
                                        "type": "boolean",
                                        "description": "User's emailVerified",
                                        "example": false
                                    },"emailVerificationToken": {
                                        "type": "string",
                                        "description": "User's emailVerificationToken",
                                        "example": "cnscsdvjdefwe32"
                                    },
                                    "temporaryPassword": {
                                        "type": "string",
                                        "description": "User's temporaryPassword",
                                        "example": null
                                    },
                                    "transactions": {
                                        "type": [],
                                        "description": "User's transactions",
                                        "example": []
                                    }                                
                                }
                            }
                        }
                    }
                }
            },
            "AddTransactionRequest": {
                "type": "object",
                "required": [
                    "isIncome",
                    "amount",
                    "category",
                    "date"
                ],
                "properties": {
                    "isIncome": {
                        "type": "boolean",
                        "description": "Typy of transaction",
                        "example": true
                    },
                    "amount": {
                        "type": "number",
                        "description": "Sum of transaction",
                        "example": "1000"
                    },
                    "category": {
                        "type": "string",
                        "oneOf": [
                            "Main expenses",
                            "Products",
                            "Car",
                            "Self care",
                            "Child care",
                            "Household products",
                            "Education",
                            "Leisure",
                            "Other expenses",
                            "Entertainment"
                        ],
                        "description": "Transaction category",
                        "example": "Car"
                    },
                    "date": {
                        "type": "string",
                        "description": "Date of transaction",
                        "example": "11.11.2022"
                    }                    
                }
            },
            "AddTransactionResponse": {
                "type": "object",
                "properties": {
                    "transactions": {
                        "type": "object",
                        "properties": {
                            "isIncome": {
                                "type": "boolean",
                                "description": "Type of transaction",
                                "example": true
                            },
                            "amount": {
                                "type": "number",
                                "description": "Sum of transaction",
                                "example": "1000"
                            },
                            "comment": {
                                "type": "string",
                                "description": "Comment of transaction",
                                "example": ""
                            },
                            "category": {
                                "type": "string",
                                "description": "Category of transaction",
                                "example": "Car"
                            },
                            "date": {
                                "type": "string",
                                "description": "Date of transaction",
                                "example": "11.11.2022"
                            },
                            "owner": {
                                "type": "string",
                                "description": "User of transaction",
                                "example": "638f11b0e5b55643929616a6"
                            },
                            "balance": {
                                "type": "number",
                                "description": "Current balance",
                                "example": "1000"
                            },
                            "_id": {
                                "type": "string",
                                "description": "User ID",
                                "example": "6395f83d0093ab41e81ab4e9"
                            }
                        }
                    }
                }
            },
            "GetAllTransactionsResponse": {
                "type": "object",
                "properties": {
                    "transactions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "_id": {
                                    "type": "string",
                                    "description": "User ID",
                                    "example": "638f11b0e5b55643929616a6"
                                },
                                "isIncome": {
                                    "type": "boolean",
                                    "description": "Type of transaction",
                                    "example": true
                                },
                                "amount": {
                                    "type": "number",
                                    "description": "Sum of transaction",
                                    "example": "1000"
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment of transaction",
                                    "example": ""
                                },
                                "category": {
                                    "type": "string",
                                    "description": "Category of transaction",
                                    "example": "Car"
                                },
                                "date": {
                                    "type": "string",
                                    "description": "Date of transaction",
                                    "example": "11.11.2022"
                                },
                                "owner": {
                                    "type": "string",
                                    "description": "User of transaction",
                                    "example": "638f11b0e5b55643929616a6"
                                },
                                "balance": {
                                    "type": "number",
                                    "description": "User's balance",
                                    "example": "1000"
                                }
                            }
                        }
                    }
                    
                }
            },
            "GetCategoriesResponse": {
                "type": "array",
                "items": {
                    "type": "string",
                    "description": "Categories",
                    "example": "Cars, Products"
                }                                              
            },
            "GetStatisticsResponse": {
                "type": "object",
                "properties": {
                    "expensesByCategories": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "_id": {
                                    "type": "string",
                                    "description": "Transaction category",
                                    "example": "Car"
                                },
                                "total": {
                                    "type": "number",
                                    "description": "Sum of transaction",
                                    "example": "1000"
                                }
                            }
                        }
                    },
                    "sums": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "spent": {
                                    "type": "number",
                                    "description": "Total spent",
                                    "example": "10000"
                                }                                
                            }
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "Bearer": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }    
}